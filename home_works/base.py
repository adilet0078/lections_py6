# # Sanzhar, [2024/2/16 11:09]
# # 1.
# # Вам дан список со словарями, сериализуйте этот список в json-строку
# import json

# # Given list of dictionaries
# data = [
#     {"name": "Alice", "age": 25},
#     {"name": "Bob", "age": 30},
#     {"name": "Charlie", "age": 35}
# ]

# # Serialize the list into a JSON string
# json_string = json.dumps(data)

# # Print the JSON string
# print(json_string)


# # 2.
# # Вам дана json-строка, десериализуйте ее. 
# # Выведите названия тех продуктов, рейтинг которых больше 4
# import json

# # Given JSON string
# json_string = '{"products": [{"name": "product1", "rating": 4.5}, {"name": "product2", "rating": 3.8}, {"name": "product3", "rating": 5.0}]}'

# # Deserialize the JSON string
# data = json.loads(json_string)

# # Print the names of products with rating greater than 4
# for product in data["products"]:
#     if product["rating"] > 4:
#         print(product["name"])


# # 3.
# # Вам дан файл db.json. Десериализуйте данные с него. 
# # Добавьте в каждый продукт новую пару ("description":"..."). 
# # Запишите измененные данные в файл new_db.jso



# # 4.
# # Удалите из файла new-db.json продукт с id 3.



# # 5.
# # Напишите функцию, которая будет запрашивать id, title, description, price, rating и добавлять этот продукт в new_db.json



# # 6.
# # Напишите функцию, которая будет принимать id продукта
# # если такого продукта нет в new_db.json, функция выводит ошибку
# # если такой продукт есть, то запрашивается id, title, description, price, rating и продукт должен обновиться в new_db.json



# # 7.
# # Напишите функцию, которая будет вытаскивать все продукты из new_db.json и выводить отсортированный список с продуктами по рейтингу (в порядке убывания)


# # 8.
# # Напишите функцию, которая принимает часть названия и выводит список из всех продуктов из new_db.json в названиях которых будет находится эта часть названия


# # 9.
# # Напишите функцию, которая принимает цену и выводит список из всех продуктов из new_db.json цена которых больше или равна заданной



# # 10.
# # Напишите функцию, которая принимает список из продуктов
# # эти продукты должны будут добавиться в new_db.json
# # если продукт с таким же id уже есть в new_db.json, то он не добавляется

# Sanzhar, [2024/2/16 11:10]
# EXTRA DICT TASKS:

# Sanzhar, [2024/2/16 11:10]
# """Объявите словарь

# a = {'a': 1, 'b': 2, 'c': 1}

# удалите один из элементов, не используя методы словаря
# """




# #3
# """Объявите словарь

# a = {'a': 1, 'b': 2, 'c': 1}

# выведите всего его элементы специальным методом и распечатайте результат. 
# Результат в терминале, должен быть такой:

# dict_items([('a', 1), ('b', 2), ('c', 3)])
# """




# #4
# """
# Дан словарь. Распечатайте максимальное значение в словаре

# a = {'a': 32, 'b': 56, 'c': 37, 'd': 21}

# Вывод:
# 56
# """



# #5
# """
# Дан словарь. Распечатайте минимальное значение в словаре

# a = {'a': 32, 'b': 56, 'c': 37, 'd': 21}

# Вывод:
# 21
# """




# #6
# """Создайте словарь a с числовыми значениями. 
# Создайте новый словарь b, такой же как словарь а, 
# но все нечетные значения замените на 1.

# Пример: Ввод -> 
# a = {'a': 3, 'b': 4, 'c': 9, 'd': 5, 'e': 6} 
# Вывод -> 
# b = {'a': 1, 'b': 4, 'c': 1, 'd': 1,  'e': 6}
# """




# #7
# """Дан словарь, оставьте все элементы с пустыми значениями, остальные удалите

# a = {'a': None, 'b': 1, 'c': 2, 'd': None, 'e': 3}

# Вывод:

# {'a': None, 'd': None}
# """






# #8
# """Дан словарь a, где ключами будут цены товаров, а значениями их названия, 
# затем пройдитесь циклом по нему и поменяйте все ключи элементов, 
# возведя их в квадрат, новые элементы запишите в словарь b

# Ввод:
# a = {25: 'apple', 26: 'orange', 27: 'banana'} 
# b = {}


# Вывод:
# {625: 'apple', 676: 'orange', 729: 'banana'}
# """




# #9
# """Дан список. Создайте словарь а, ключами которого будут строки из списка,
# а значениями их длины

# list_ = ['Bootcamp', 'Makers', 'coding', 'hello']
# a = {}

# Вывод:
# {'Bootcamp': 8, 'Makers': 6, 'coding': 6, 'hello': 5}
# """




# #10
# """Из предыдущего словаря а, достаньте ключ, значение которого является 
# максимальным

# a = {'Bootcamp': 8, 'Makers': 6, 'coding': 6, 'hello': 5}

# Вывод:
# 'Bootcamp'
# """




# '===============MEDIUM================'
# #1
# """Дан словарь a, где ключи - числа от 1 до 5 и значения те же самые числа.
# Создайте словарь b, у которого ключи такие же как в первом словаре, 
# а значения эти же числа, возведенные в куб


# a = {'1': 1, '2': 2, '3': 3, '4': 4, '5': 5}
# b = {}

# Вывод:
# {'1': 1, '2': 8, '3': 27, '4': 64, '5': 125}
# """



# #2
# """Дан словарь а, значениями, которого являются словари,
# измените словарь 'а' таким образом, чтобы значения внутреннего словаря стали 
# внешними значениями

# a = {'a': {'e': 32}, 'b': {'f': 36}, 'c': {'j': 37}, 'd': {'h': 21}}

# Вывод:
# {'a': 32, 'b': 36, 'c': 37, 'd': 21}
# """




# #3
# """Дан словарь dict1. Создайте словарь dict2, с ключами как в 
# словаре dict1, а значениями пусть будут произведение чисел внутренних словарей 

# dict1 = {'a': {'d': 1, 'e': 4}, 'b': {'f': 2, 'j': 4}, 'c': {'h': 3, 'i': 9}}
# dict2 = {}

# Вывод:
# {'a': 4, 'b': 8, 'c': 27}
# """




# #4
# """Дан список, состоящий из строк и чисел. Создайте словарь, ключами которого
# будут строки из списка, а значениями числа


# list_ = ['hello', 23, 56, 'world', 928, 'Makers', 456, 'word', 223, 89, 'bootcamp', 'coding']
# a = {}


# Вывод:
# {'hello': 23, 'world': 56, 'Makers': 928, 'word': 456, 'bootcamp': 223, 'coding': 89}
# """



# #5
# """Дан словарь dict_. Отсортируйте словарь по значениям в порядке увеличения.
# Новые элементы занесите в словарь sorted_dict

# dict_ = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
# sorted_dict = {}

# Вывод:
# {0: 0, 2: 1, 1: 2, 4: 3, 3: 4}
# """




# #6
# """Дан словарь dict_. Отсортируйте словарь по значениям в порядке уменьшения.
# Новые элементы занесите в словарь sorted_dict

# dict_ = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
# sorted_dict = {}

# Вывод:
# {0: 0, 2: 1, 1: 2, 4: 3, 3: 4}
# """



# #7
# """Дан словарь. С помощью переменной x проверьте есть ли такой ключ в словаре.
# Если есть, напечатайте строку 'Key is present in the dictionary', если нет -
# 'Key is not present in the dictionary'

# dict_ = {1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}
# x = input()
# """



# '==================HARD===================='
# #1
# """Даны 3 словаря. Объедините эти словари в 4

# dic1={1:10, 2:20}
# dic2={3:30, 4:40}
# dic3={5:50, 6:60}
# dic4 = {}

# Вывод:
# {1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}
# """

# Sanzhar, [2024/2/16 11:10]
# #2
# """Даны два списка одинаковой длины. 
# Необходимо создать из них словарь таким образом, 
# чтобы элементы первого списка были ключами, 
# а элементы второго — соответственно значениями нашего словаря


# list1 = [1, 2, 3, 4, 5, 6, 7]
# list2 = ['one', 'two', 'three', 'four', 'five', 'six', 'seven']
# a = {}

# Вывод:
# {1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven'}
# """



# #3
# """Дан словарь. Найдите сумму значений словаря, который хранится под ключом 'vars',
# используя значение словаря, под ключом 'math'

# dict_ = {
#     'math': {
#         'sum': sum
#     },
#     'vars': {
#         'a': 5,
#         'b': 20,
#         'c': 50
#     }
# }

# Вывод: 
# 75
# """